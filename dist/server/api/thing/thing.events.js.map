{"version":3,"sources":["api/thing/thing.events.js"],"names":["ThingEvents","setMaxListeners","events","save","remove","registerEvents","Thing","e","event","post","emitEvent","doc","emit","_id"],"mappings":"AAAA;;;;AAIA;;;;;;;AAEA;;AACA,IAAIA,cAAc,0BAAlB;;AAEA;AACAA,YAAYC,eAAZ,CAA4B,CAA5B;;AAEA;AACA,IAAIC,SAAS;AACXC,QAAM,MADK;AAEXC,UAAQ;AAFG,CAAb;;AAKA;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,OAAI,IAAIC,CAAR,IAAaL,MAAb,EAAqB;AACnB,QAAIM,QAAQN,OAAOK,CAAP,CAAZ;AACAD,UAAMG,IAAN,CAAWF,CAAX,EAAcG,UAAUF,KAAV,CAAd;AACD;AACF;;AAED,SAASE,SAAT,CAAmBF,KAAnB,EAA0B;AACxB,SAAO,UAASG,GAAT,EAAc;AACnBX,gBAAYY,IAAZ,CAAoBJ,KAApB,SAA6BG,IAAIE,GAAjC,EAAwCF,GAAxC;AACAX,gBAAYY,IAAZ,CAAiBJ,KAAjB,EAAwBG,GAAxB;AACD,GAHD;AAID;;QAEON,c,GAAAA,c;kBACOL,W","file":"thing.events.js","sourcesContent":["/**\n * Thing model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nvar ThingEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nThingEvents.setMaxListeners(0);\n\n// Model events\nvar events = {\n  save: 'save',\n  remove: 'remove'\n};\n\n// Register the event emitter to the model events\nfunction registerEvents(Thing) {\n  for(var e in events) {\n    let event = events[e];\n    Thing.post(e, emitEvent(event));\n  }\n}\n\nfunction emitEvent(event) {\n  return function(doc) {\n    ThingEvents.emit(`${event}:${doc._id}`, doc);\n    ThingEvents.emit(event, doc);\n  };\n}\n\nexport {registerEvents};\nexport default ThingEvents;\n"]}